plugins {
    id 'multiloader-loader'
    id 'net.neoforged.gradle.userdev' version '7.0.142'
    id "com.modrinth.minotaur" version "2.+"
}

// Automatically enable neoforge AccessTransformers if the file exists
// This location is hardcoded in FML and can not be changed.
// https://github.com/neoforged/FancyModLoader/blob/a952595eaaddd571fbc53f43847680b00894e0c1/loader/src/main/java/net/neoforged/fml/loading/moddiscovery/ModFile.java#L118
def at = file('src/main/resources/META-INF/accesstransformer.cfg')
if (at.exists()) {
    minecraft.accessTransformers.file at
}
runs {
    configureEach {
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('../common/src/main/generated/').getAbsolutePath(), '--existing', file('../common/src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir project(":common").file('src/main/generated/').getAbsolutePath() }

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    if (project.use_rei.toBoolean()) {
        implementation "me.shedaniel:RoughlyEnoughItems-neoforge:$rei_version"
        implementation "me.shedaniel.cloth:cloth-config-neoforge:$cloth_config_version"
       // implementation "dev.architectury:architectury-neoforge:$architectury_version"
    }


    implementation "net.kyrptonaught.customportalapi:cpapireforged-neo-1.21.1:1.0.11"
}