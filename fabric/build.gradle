plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id "com.modrinth.minotaur" version "2.+"
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    if (project.use_rei.toBoolean()) {
        modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"
        modImplementation "me.shedaniel.cloth:cloth-config-fabric:$cloth_config_version"
       // modImplementation "dev.architectury:architectury-fabric:$architectury_version"
    }
}


loom {
    def aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
    }
}

sourceSets.main.resources { srcDir project(":common").file('src/main/generated/').getAbsolutePath() }
